# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/
      - name: Generate changelog
        if: startsWith(github.ref, 'refs/tags/')
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in ${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/su-craftable-name-tag-*.jar
          asset_name: su-craftable-name-tag-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive
      - name: Publish to Modrinth (only on releases)
        if: startsWith(github.ref, 'refs/tags/')
        uses: cloudnode-pro/modrinth-publish@v2
        with:
          token: ${{ secrets.MODRINTH_TOKEN }}
          project: ${{ env.PROJECT_ID }}
          loaders: fabric
          files: build/libs/su-craftable-name-tag-*.jar
          version: ${{ github.ref_name }}
          changelog: ${{ steps.changelog.outputs.changelog }}
          game-versions: |-
            1.21.x
